# deploy.yml

# Install Docker on all nodes
- name: Ensure Docker is installed
  hosts: all
  become: true
  gather_facts: false
  tasks:
    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        state: present
        update_cache: true

    - name: Add Docker GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      args:
        creates: /usr/share/keyrings/docker-archive-keyring.gpg

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable
        state: present

    - name: Install Docker CE
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: latest
        update_cache: true

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: true

    - name: Add user to docker group
      user:
        name: ubuntu
        groups: docker
        append: true

# Log in to GitHub Container Registry
- name: Log in to GitHub Container Registry on Swarm nodes
  hosts: all
  become: true
  tasks:
    - name: Login to GHCR
      docker_login:
        registry_url: ghcr.io
        username: "{{ lookup('env', 'GITHUB_ACTOR') }}"
        password: "{{ lookup('env', 'GHCR_TOKEN') }}"
- name: Deploy Wazuh Stack
  hosts: all
  become: true
  gather_facts: true
  vars_files:
    - group_vars/all.yml
    - group_vars/vault.yml    # encrypted
  roles:
    - swarm-init    # initializes swarm and joins other nodes
    - networks      # creates overlay networks
    - secrets       # creates Swarm secrets cluster-wide (on dashboard node)
    - traefik       # deploys Traefik reverse proxy with TLS/ACME
    - deploy-stack  # deploys/updates stack with rollback
