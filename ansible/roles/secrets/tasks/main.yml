# Run only on the dashboard (swarm manager) – secrets are cluster-scoped once created
- name: "Build secrets payload map (in-memory only)"
  no_log: true
  set_fact:
    _swarm_secrets:
      wazuh_api_user: "{{ wazuh_user }}"
      wazuh_api_password: "{{ wazuh_password }}"
      dashboard_tls_key: "{{ traefik_private_key }}"
      dashboard_tls_crt: "{{ traefik_certificate }}"
  when: hostvars[inventory_hostname].role == "dashboard"

# Remove old secrets (best-effort) – avoids stale content; ignore if not present
- name: "Purge existing Swarm secrets before re-creating (best effort)"
  no_log: true
  docker_secret:
    name: "{{ item.key }}"
    state: absent
  loop: "{{ _swarm_secrets|dict2items }}"
  ignore_errors: true
  when: hostvars[inventory_hostname].role == "dashboard"

# Create Swarm secrets with current content
- name: "Create Swarm secrets with current content"
  no_log: true
  docker_secret:
    name: "{{ item.key }}"
    state: present
    secret: "{{ item.value }}"
  loop: "{{ _swarm_secrets|dict2items }}"
  when: hostvars[inventory_hostname].role == "dashboard"
